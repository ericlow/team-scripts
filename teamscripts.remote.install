#!/bin/bash
###################################################################################
#
# install team scripts to a remote host and make them available on the user path
#
# Goal 1: On a remote host modify .bash_profile to include the following 2 lines
#     # team-scripts
#     source ~/msearchScripts/bootstrap.sh
#
# Goal 2: On a remote host, create ~/bin/teamscripts
#
# Goal 3: On a remote host, upload a file: 
#  from workstation: 		remote.scripts/bootstrap.sh
#  to remote host: 	~/teamscripts/bootstrap.sh
# 
###################################################################################

if [ "?" = "$1" ]; then
	echo "teamscripts.remote.install : install team scripts to a remote host and make them available on the user path"
	echo "    Prerequisites:"
	echo "    	Required:"
	echo "    		REMOTE_HOST: environment variable, value is the host to deploy scripts to"
	echo "    	Optional:"
	echo "    		REMOTE_USER: environment variable, value is the user to ssh to the host as"
	echo "    Usage: execute this script from the command line"
	echo "		  cd/team-scripts"
	echo "        ./teamscripts.remote.install"
	exit 0
fi

# Set connection values here or get it from an env variable
HOST=$REMOTE_HOST
USER=''

# if user is not set, try to infer the user from env or from git config
if [ -z "$USER" ]; then
	USER=$REMOTE_USER
	if [ -z "$USER" ]; then
		EMAIL=$(git config user.email)
		USER=$(echo $EMAIL | awk -F\@ '{print $1}')
	fi
fi

# Deploy the scripts to the host
echo "----------------------- $HOST scripts ---------------------------"
echo "-------------------Executing script as user $USER-------------------"

echo check for existing directory
exists=$( ssh $USER@$HOST "cat ~/.bash_profile | grep \"# team-scripts\" | wc -l " )
if [[ "${exists}" -eq "0" ]]; then
	echo "modifying .bash_profile"; 
	ssh $USER@$HOST "echo \"# team-scripts\" >> ~/.bash_profile"
	ssh $USER@$HOST "echo \"source ~/teamscripts/bootstrap.sh\" >> ~/.bash_profile"
fi

echo remove any existing remote script copies
ssh $USER@$HOST 'rm -rf ~/teamscripts && mkdir ~/teamscripts'

echo redeploy the remote script copies
scp remote.scripts/* $USER@$HOST:~/teamscripts

echo
echo "COMPLETE"


